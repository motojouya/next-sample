version: '3.1'

services:
  next:
    build:
      context: "./next"
      args:
        - UID
        - GID
        - USERNAME=bsample
        - GROUPNAME=bsample
    tty: true
    volumes:
      - "./next:/srv"
    depends_on:
      - rdb
      # - memory
    links:
      - "rdb:rdb"
      # - "memory:memory"
    # command: sh -c "npm run dev"
    environment:
      TZ: Asia/Tokyo
      NODE_ENV: develop
      PORT: 3000
      PG_HOST: rdb
      PG_PORT: 5432
      PG_DATABASE: bsample
      PG_USER: bsample
      PG_PASSWORD: bsample
      SESSION_SECRET: secret12secret34secret56secret78
      SESSION_COOKIE_NAME: session-id
      # REDIS_HOST: memory
      # REDIS_PORT: 6379
      MAIL_HOST: "mail"
      MAIL_PORT: 1025
      MAIL_FROM: motojouya@example.com
    ports:
      - "3000:3000"
  rdb:
    build:
      context: "./container/rdb"
      args:
        - UID
        - GID
        - USERNAME=bsample
        - GROUPNAME=bsample
    restart: always
    environment:
      POSTGRES_USER: bsample
      POSTGRES_PASSWORD: bsample
      POSTGRES_DB: bsample
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - rdb:/var/lib/postgresql/data
#  memory:
#    build:
#      context: "./container/memory"
#      args:
#        - UID
#        - GID
#        - USERNAME=bsample
#        - GROUPNAME=bsample
  mail:
    image: maildev/maildev
#    container_name: maildev
    ports:
      - "1080:1080"
#    environment:
#      MH_STORAGE: maildir
#      MH_MAILDIR_PATH: /tmp
#    volumes:
#      - maildir:/tmp
#  front_test:
#    depends_on:
#      - front
#    build: "./front_test"
#    volumes:
#      - "~/Develop/tabinote/test:/usr/local/src/tabinote"
#    links:
#      - "front:front"
#    environment:
#    command: "dockerize -timeout 60s -wait tcp://rdb:5432 npm run test"
#  server_test:
#    depends_on:
#      - rdb
#      - server
#    build: "./server_test"
#    volumes:
#      - "~/Develop/tabinote/test:/usr/local/src/tabinote"
#    links:
#      - "rdb:rdb"
#      - "server:server"
#    environment:
#      PG_USER: postgres
#      PG_PASS: postgres
#      PG_NAME: hotline
#      PG_HOST: rdb
#      PG_PORT: 5432
#      PGPASSWORD: postgres
#      APP_HOST: app
#      APP_PORT: 3000
#    command: "dockerize -timeout 60s -wait tcp://rdb:5432 npm run test"
volumes:
  rdb:
#  maildir: {}
